From 190d819a351620e34e969a86bfd668fe48ccc3a4 Mon Sep 17 00:00:00 2001
From: Julian Brown <julian.brown@cpanel.net>
Date: Thu, 14 May 2020 14:09:11 -0500
Subject: [PATCH] apr-util: to make it work with Mysql *

my_global.h no longer exists, mysql.h is what you need to include
in it's place.

my_sys.h no longer exists and does not need to be included.

my_bool is no longer in the code, changed to bool.

my_init(), per Mysql 8 no longer exists and it's function has been
taken care of behind the scenes.
---
 build/dbd.m4        | 16 ++++++++--------
 dbd/apr_dbd_mysql.c | 12 ++++++------
 2 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/build/dbd.m4 b/build/dbd.m4
index c6e40e0..46defc6 100644
--- a/build/dbd.m4
+++ b/build/dbd.m4
@@ -176,15 +176,15 @@ AC_DEFUN([APU_CHECK_DBD_MYSQL], [
         APR_ADDTO(LIBS, [$mysql_LIBS])
       fi
 
-      AC_CHECK_HEADERS([mysql.h my_global.h my_sys.h],
+      AC_CHECK_HEADERS([mysql.h  ],
                        AC_CHECK_LIB(mysqlclient, mysql_init, [apu_have_mysql=1]),
                        [apu_have_mysql=0; break],
-                       [#include <my_global.h>])
+                       [#include <mysql.h>])
       if test "$apu_have_mysql" = "0"; then
-        AC_CHECK_HEADERS([mysql/mysql.h mysql/my_global.h mysql/my_sys.h],
+        AC_CHECK_HEADERS([mysql/mysql.h  ],
                          AC_CHECK_LIB(mysqlclient, mysql_init, [apu_have_mysql=1]),
                          [apu_have_mysql=0; break],
-                         [#include <mysql/my_global.h>])
+                         [#include <mysql/mysql.h>])
       fi
       if test "$apu_have_mysql" != "0" && test "x$MYSQL_CONFIG" != 'x'; then
         APR_ADDTO(APRUTIL_PRIV_INCLUDES, [$mysql_CPPFLAGS])
@@ -207,16 +207,16 @@ AC_DEFUN([APU_CHECK_DBD_MYSQL], [
       APR_ADDTO(LIBS, [$mysql_LIBS])
 
       AC_MSG_NOTICE(checking for mysql in $withval)
-      AC_CHECK_HEADERS([mysql.h my_global.h my_sys.h],
+      AC_CHECK_HEADERS([mysql.h  ],
                        AC_CHECK_LIB(mysqlclient, mysql_init, [apu_have_mysql=1]),
                        [apu_have_mysql=0; break],
-                       [#include <my_global.h>])
+                       [#include <mysql.h>])
 
       if test "$apu_have_mysql" != "1"; then
-        AC_CHECK_HEADERS([mysql/mysql.h mysql/my_global.h mysql/my_sys.h],
+        AC_CHECK_HEADERS([mysql/mysql.h  ],
                          AC_CHECK_LIB(mysqlclient, mysql_init, [apu_have_mysql=1]),
                          [apu_have_mysql=0; break],
-                         [#include <mysql/my_global.h>])
+                         [#include <mysql/mysql.h>])
       fi
       if test "$apu_have_mysql" != "0"; then
         APR_ADDTO(APRUTIL_PRIV_INCLUDES, [$mysql_CPPFLAGS])
diff --git a/dbd/apr_dbd_mysql.c b/dbd/apr_dbd_mysql.c
index 3b8017d..b9ee920 100644
--- a/dbd/apr_dbd_mysql.c
+++ b/dbd/apr_dbd_mysql.c
@@ -713,9 +713,9 @@ static int dbd_mysql_pselect_internal(apr_pool_t *pool, apr_dbd_t *sql,
                                       int random, MYSQL_BIND *bind)
 {
     int nfields, i;
-    my_bool *is_nullr;
+    bool *is_nullr;
 #if MYSQL_VERSION_ID >= 50000
-    my_bool *error;
+    bool *error;
 #endif
     int ret;
     unsigned long *length, maxlen;
@@ -738,9 +738,9 @@ static int dbd_mysql_pselect_internal(apr_pool_t *pool, apr_dbd_t *sql,
                 (*res)->bind = apr_palloc(pool, nfields*sizeof(MYSQL_BIND));
                 length = apr_pcalloc(pool, nfields*sizeof(unsigned long));
 #if MYSQL_VERSION_ID >= 50000
-                error = apr_palloc(pool, nfields*sizeof(my_bool));
+                error = apr_palloc(pool, nfields*sizeof(bool));
 #endif
-                is_nullr = apr_pcalloc(pool, nfields*sizeof(my_bool));
+                is_nullr = apr_pcalloc(pool, nfields*sizeof(bool));
                 for ( i = 0; i < nfields; ++i ) {
                     maxlen = ((*res)->res->fields[i].length < sql->fldsz ?
                               (*res)->res->fields[i].length : sql->fldsz) + 1;
@@ -1104,7 +1104,7 @@ static apr_dbd_t *dbd_mysql_open(apr_pool_t *pool, const char *params,
     const char *value;
     size_t vlen;
 #if MYSQL_VERSION_ID >= 50013
-    my_bool do_reconnect = 1;
+    bool do_reconnect = 1;
 #endif
     MYSQL *real_conn;
     unsigned long flags = 0;
@@ -1262,7 +1262,7 @@ static apr_status_t thread_end(void *data)
 
 static void dbd_mysql_init(apr_pool_t *pool)
 {
-    my_init();
+    
     mysql_thread_init();
 
     /* FIXME: this is a guess; find out what it really does */
-- 
2.25.1


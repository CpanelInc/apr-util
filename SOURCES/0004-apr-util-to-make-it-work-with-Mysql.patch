From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Julian Brown <julian.brown@cpanel.net>
Date: Thu, 14 May 2020 14:09:11 -0500
Subject: [PATCH 4/4] apr-util: to make it work with Mysql *

my_global.h no longer exists, mysql.h is what you need to include
in it's place.

my_sys.h no longer exists and does not need to be included.

my_bool is no longer in the code, changed to bool.

my_init(), per Mysql 8 no longer exists and it's function has been
taken care of behind the scenes.
---
 build/dbd.m4        |  2 --
 dbd/apr_dbd_mysql.c | 13 +++++--------
 2 files changed, 5 insertions(+), 10 deletions(-)

diff --git a/build/dbd.m4 b/build/dbd.m4
index 46ba465..856a0cf 100644
--- a/build/dbd.m4
+++ b/build/dbd.m4
@@ -190,7 +190,6 @@ AC_DEFUN([APU_CHECK_DBD_MYSQL], [
         AC_CHECK_HEADERS([mysql/mysql.h mysql/errmsg.h], [apu_have_mysql=1], [apu_have_mysql=0; break])
       fi
       if test "$apr_have_mysql" = "1"; then
-        AC_CHECK_HEADERS([my_global.h my_sys.h mysql/my_global.h mysql/my_sys.h])
         AC_CHECK_LIB($my_library, mysql_init,, [apu_have_mysql=0])
       fi
       if test "$apu_have_mysql" = "1" && test "x$MYSQL_CONFIG" != 'x'; then
@@ -225,7 +224,6 @@ AC_DEFUN([APU_CHECK_DBD_MYSQL], [
         AC_CHECK_HEADERS([mysql/mysql.h mysql/errmsg.h], [apu_have_mysql=1], [apu_have_mysql=0; break])
       fi
       if test "$apr_have_mysql" = "1"; then
-        AC_CHECK_HEADERS([my_global.h my_sys.h mysql/my_global.h mysql/my_sys.h])
         AC_CHECK_LIB($my_library, mysql_init,, [apu_have_mysql=0])
       fi
       if test "$apu_have_mysql" = "1"; then
diff --git a/dbd/apr_dbd_mysql.c b/dbd/apr_dbd_mysql.c
index d3e938c..af5b693 100644
--- a/dbd/apr_dbd_mysql.c
+++ b/dbd/apr_dbd_mysql.c
@@ -713,9 +713,9 @@ static int dbd_mysql_pselect_internal(apr_pool_t *pool, apr_dbd_t *sql,
                                       int random, MYSQL_BIND *bind)
 {
     int nfields, i;
-    my_bool *is_nullr;
+    bool *is_nullr;
 #if MYSQL_VERSION_ID >= 50000
-    my_bool *error;
+    bool *error;
 #endif
     int ret;
     unsigned long *length, maxlen;
@@ -738,9 +738,9 @@ static int dbd_mysql_pselect_internal(apr_pool_t *pool, apr_dbd_t *sql,
                 (*res)->bind = apr_palloc(pool, nfields*sizeof(MYSQL_BIND));
                 length = apr_pcalloc(pool, nfields*sizeof(unsigned long));
 #if MYSQL_VERSION_ID >= 50000
-                error = apr_palloc(pool, nfields*sizeof(my_bool));
+                error = apr_palloc(pool, nfields*sizeof(bool));
 #endif
-                is_nullr = apr_pcalloc(pool, nfields*sizeof(my_bool));
+                is_nullr = apr_pcalloc(pool, nfields*sizeof(bool));
                 for ( i = 0; i < nfields; ++i ) {
                     maxlen = ((*res)->res->fields[i].length < sql->fldsz ?
                               (*res)->res->fields[i].length : sql->fldsz) + 1;
@@ -1104,7 +1104,7 @@ static apr_dbd_t *dbd_mysql_open(apr_pool_t *pool, const char *params,
     const char *value;
     size_t vlen;
 #if MYSQL_VERSION_ID >= 50013
-    my_bool do_reconnect = 1;
+    bool do_reconnect = 1;
 #endif
     MYSQL *real_conn;
     unsigned long flags = 0;
@@ -1262,9 +1262,6 @@ static apr_status_t thread_end(void *data)
 
 static void dbd_mysql_init(apr_pool_t *pool)
 {
-#if MYSQL_VERSION_ID < 100000
-    my_init();
-#endif
     mysql_thread_init();
 
     /* FIXME: this is a guess; find out what it really does */
